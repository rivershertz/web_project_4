!function(){"use strict";class e{constructor(e,t){this._currentForm=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputs=Array.from(this._currentForm.querySelectorAll(this._inputSelector)),this._submitButton=this._currentForm.querySelector(this._submitButtonSelector)}resetValidation(){this._inputs.forEach((e=>{this._hideInputError(e)}))}_showInputError(e,t){const s=this._currentForm.querySelector(".".concat(e.id,"-input-error"));e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._currentForm.querySelector(".".concat(e.id,"-input-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleInputError(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputs.some((e=>!e.validity.valid))}toggleSubmitButton(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputs.forEach((e=>{e.addEventListener("input",(()=>{this._toggleInputError(e),this.toggleSubmitButton()}))}))}enableValidation(){this._currentForm.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class s{constructor(e,s,r,o,i,n){t(this,"isLiked",(()=>this._likes.some((e=>e._id===this._userId)))),t(this,"removeCard",(()=>{this._element.remove(),this._element=null})),this._userId=n,this._text=e.name,this._link=e.link,this._id=e._id,this._likes=e.likes,this._templateSelector=s,this._handleCardClick=r,this._handleCardRemove=o,this._handleLikes=i,this._ownerId=e.owner._id,this._element=this._getTemplate(),this._removeButton=this._element.querySelector(".photos__remove"),this._likesCounter=this._element.querySelector(".photos__like-counter")}_getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".photos__card").cloneNode(!0)}generateCard(){const e=this._element.querySelector(".photos__title"),t=this._element.querySelector(".photos__img");return t.src=this._link,t.alt="picture of ".concat(this._text),e.textContent=this._text,this._userId!==this._ownerId&&(this._removeButton.style.display="none"),this._renderLikes(),this._setEventListeners(),this._element}_setEventListeners(){const e=this._element.querySelector(".photos__like"),t=this._element.querySelector(".photos__img");e.addEventListener("click",(()=>this._handleLikes(this))),this._removeButton.addEventListener("click",(()=>this._handleCardRemove(this._id))),t.addEventListener("click",(()=>{this._handleCardClick(this._text,this._link)}))}updateLikes(e){this._likes=e,this._renderLikes()}_renderLikes(){this._likesCounter.textContent=this._likes.length,this.isLiked()?this._element.querySelector(".photos__like").classList.add("photos__like_active"):this._element.querySelector(".photos__like").classList.remove("photos__like_active")}}const r=(e,t)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject(e.statusText)));function o(e,t,s){t.querySelector(".popup__save").textContent=e?s:"Saving..."}class i{constructor(e){var t,s;s=e=>{"Escape"===e.code&&this.close()},(t="_handleEscClose")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[t]=s,this._popup=document.querySelector(e),this.close=this.close.bind(this)}open(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popup.querySelector(".popup__close").addEventListener("click",this.close),this._popup.addEventListener("mousedown",(e=>{e.target.matches(".popup")&&this.close()}))}}class n extends i{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popup.querySelector(".popup__form")}_getInputValues(){const e=Array.from(this._popup.querySelectorAll(".popup__input")),t={};return e.forEach((e=>{t[e.id]=e.value})),t}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._getInputValues())}))}}document.querySelector(".popup_image-popup");const a=document.querySelector(".popup_new-image"),l=document.querySelector(".popup_edit-pic"),c=document.querySelector(".popup_profile"),u=document.querySelector(".popup_delete"),_=(document.querySelector(".profile__name"),document.querySelector(".profile__subtitle"),document.querySelector(".profile__edit")),p=document.querySelector(".profile__add"),h=document.querySelector(".popup__name"),d=document.querySelector(".popup__about"),m=(document.querySelector(".popup__img_image-popup"),document.querySelector(".popup__title_image-popup"),document.querySelector(".photos__list")),v=document.querySelector(".profile__pic"),S={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};let b;const y=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}getInitialCards(){return r("".concat(this._baseUrl,"/cards"),{headers:this._headers})}getUserInfo(){return r("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}setUserInfo(e,t){return r("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})})}setUserAvatar(e){return r("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}createCard(e){let{imageName:t,link:s}=e;return r("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})})}getLikes(e){return r("".concat(this._baseUrl,"/cards/").concat(e),{headers:this._headers})}deleteCard(e){return r("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers})}addLike(e){return r("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers})}removeLike(e){return r("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers})}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"47fa02be-b6a6-415a-ad1a-fb244489b961","Content-Type":"application/json"}});Promise.all([y.getUserInfo(),y.getInitialCards()]).then((e=>{let[t,s]=e;b=t._id,B.renderItems(s),E.setUserInfo(t),E.setUserPic(t.avatar)})).catch(console.log);const f=new e(S,a);f.enableValidation();const g=new e(S,c);g.enableValidation();const L=new e(S,l);L.enableValidation();const E=new class{constructor(e){let{nameSelector:t,aboutSelector:s,avatarSelector:r}=e;this._name=document.querySelector(t),this._about=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){this._name.textContent=e.name,this._about.textContent=e.about}setUserPic(e){this._avatar.style.background="url("+e+")"}}({nameSelector:".profile__name",aboutSelector:".profile__subtitle",avatarSelector:".profile__pic"}),k=new class extends i{open(e,t){const s=this._popup.querySelector(".popup__img_image-popup"),r=this._popup.querySelector(".popup__title_image-popup");s.src=t,s.alt="picture of ".concat(e),r.textContent=e,super.open()}}(".popup_image-popup");k.setEventListeners();const C=new n(".popup_profile",(e=>{o(!1,c),y.setUserInfo(e.profileName,e.profileAbout).then((e=>{E.setUserInfo(e),C.close(),c.querySelector(".popup__form").reset()})).catch((e=>{console.log(e)})).finally((()=>{o(!0,c,"Save")}))}));C.setEventListeners();const q=new n(".popup_edit-pic",(e=>{o(!1,l),y.setUserAvatar(e.editLink).then((e=>{E.setUserPic(e.avatar),q.close(),l.querySelector(".popup__form").reset()})).catch(console.log).finally((()=>{o(!0,l,"Save")}))}));q.setEventListeners();const I=new n(".popup_new-image",(e=>{o(!1,a),y.createCard(e).then((e=>{const t=w(e);B.addItem(t.generateCard()),I.close(),a.querySelector(".popup__form").reset()})).catch(console.log).finally((()=>{o(!0,a,"Create")}))}));I.setEventListeners();const U=new class extends i{setAction(e){this._handleConfirm=e}setEventListeners(){super.setEventListeners(),this._popup.querySelector(".popup__form").addEventListener("submit",(e=>{e.preventDefault(),this._handleConfirm()}))}}(".popup_delete");U.setEventListeners(),_.addEventListener("click",(()=>{g.toggleSubmitButton(),g.resetValidation(),(()=>{const e=E.getUserInfo();h.value=e.name,d.value=e.about})(),C.open()})),p.addEventListener("click",(()=>{f.resetValidation(),f.toggleSubmitButton(),I.open()})),v.addEventListener("click",(()=>{L.toggleSubmitButton(),L.resetValidation(),q.open()}));const w=e=>{const t=new s(e,"#template",((e,t)=>{k.open(e,t)}),(e=>{U.open(),U.setAction((()=>{o(!1,u),y.deleteCard(e).then((e=>{t.removeCard(),U.close()})).catch(console.log).finally((()=>{o(!0,u,"Yes")}))}))}),(e=>{e.isLiked()?y.removeLike(e._id).then((t=>{e.updateLikes(t.likes)})).catch(console.log):y.addLike(e._id).then((t=>{e.updateLikes(t.likes)})).catch(console.log)}),b);return t},B=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}({renderer:e=>{((e,t)=>{const s=w(e);t.prepend(s.generateCard())})(e,m)}},".photos__list")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,